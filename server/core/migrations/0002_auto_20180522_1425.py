# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2018-05-22 14:25
from __future__ import unicode_literals

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('finished_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('block_status', models.CharField(blank=True, max_length=31)),
            ],
        ),
        migrations.CreateModel(
            name='BlockConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=31)),
                ('clocktime', models.DateTimeField(default=django.utils.timezone.now)),
                ('charge_status', models.DecimalField(blank=True, decimal_places=5, max_digits=30)),
                ('charge_distance', models.DecimalField(blank=True, decimal_places=5, max_digits=30)),
                ('time_to_full_charge', models.DecimalField(blank=True, decimal_places=5, max_digits=30)),
                ('flexibility_time_request', models.DecimalField(blank=True, decimal_places=5, max_digits=30)),
                ('flexibility_charge_level_request', models.DecimalField(blank=True, decimal_places=5, max_digits=30)),
                ('flexibility_time_provision', models.DecimalField(blank=True, decimal_places=5, max_digits=30)),
                ('flexibility_charge_level_provision', models.DecimalField(blank=True, decimal_places=5, max_digits=30)),
                ('full_charge_price', models.DecimalField(blank=True, decimal_places=5, max_digits=30)),
            ],
        ),
        migrations.CreateModel(
            name='BookRecommendationForFriend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=31)),
                ('last_name', models.CharField(blank=True, max_length=31)),
                ('book_title', models.CharField(max_length=63)),
                ('book_author', models.CharField(max_length=63)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('friend_email', models.CharField(max_length=63)),
                ('email_sent', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='EventHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('screen', models.CharField(max_length=255)),
                ('event', models.CharField(max_length=255)),
                ('nudge', models.CharField(max_length=255)),
                ('time_stamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Block')),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('finished_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('number_of_participants', models.PositiveSmallIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GroupInvite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=63)),
                ('first_name', models.CharField(blank=True, max_length=31)),
                ('last_name', models.CharField(blank=True, max_length=31)),
                ('verification_token', models.CharField(max_length=64, unique=True)),
                ('consumed', models.BooleanField(default=False)),
                ('email_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', core.models.AutoDateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Nudge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('heading', models.CharField(max_length=30)),
                ('text', models.CharField(max_length=200)),
                ('image', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('finished_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('session_status', models.CharField(blank=True, max_length=31)),
            ],
        ),
        migrations.CreateModel(
            name='SessionBlockConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.BlockConfig')),
            ],
        ),
        migrations.CreateModel(
            name='SessionConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=31)),
                ('number_of_sessions', models.PositiveSmallIntegerField(blank=True)),
                ('session_config_status', models.CharField(default='active', max_length=31)),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='book',
            name='updated_at',
            field=core.models.AutoDateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='bookshelfentry',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='bookshelfentry',
            name='updated_at',
            field=core.models.AutoDateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='customuser',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='customuser',
            name='profile_image',
            field=models.CharField(blank=True, default='default.png', max_length=128),
        ),
        migrations.AddField(
            model_name='customuser',
            name='updated_at',
            field=core.models.AutoDateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='group',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='group',
            name='updated_at',
            field=core.models.AutoDateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='membership',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='membership',
            name='updated_at',
            field=core.models.AutoDateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(related_name='members', through='core.Membership', to='core.Group'),
        ),
        migrations.AddField(
            model_name='sessionblockconfig',
            name='session_config',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.SessionConfig'),
        ),
        migrations.AddField(
            model_name='session',
            name='session_config',
            field=models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='core.SessionConfig'),
        ),
        migrations.AddField(
            model_name='session',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='groupinvite',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invites', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='groupinvite',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Group'),
        ),
        migrations.AddField(
            model_name='groupinvite',
            name='invitee',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_invites', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eventhistory',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Session'),
        ),
        migrations.AddField(
            model_name='bookrecommendationforfriend',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='blockconfig',
            name='nudge',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Nudge'),
        ),
        migrations.AddField(
            model_name='block',
            name='block_config',
            field=models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='core.BlockConfig'),
        ),
        migrations.AddField(
            model_name='block',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Session'),
        ),
        migrations.AddField(
            model_name='block',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='membership',
            name='invite',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.GroupInvite'),
        ),
        migrations.AlterUniqueTogether(
            name='sessionblockconfig',
            unique_together=set([('session_config', 'block_config')]),
        ),
        migrations.AlterUniqueTogether(
            name='session',
            unique_together=set([('user', 'session_config')]),
        ),
        migrations.AlterUniqueTogether(
            name='groupinvite',
            unique_together=set([('email', 'group')]),
        ),
        migrations.AlterUniqueTogether(
            name='block',
            unique_together=set([('session', 'block_config')]),
        ),
    ]
